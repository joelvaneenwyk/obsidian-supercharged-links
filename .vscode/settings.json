{
  "[javascript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true,
      "source.organizeImports": true
    },
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[javascriptreact]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true,
      "source.organizeImports": true
    },
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[json]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true
    },
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true
  },
  "[jsonc]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true
    },
    "editor.defaultFormatter": "vscode.json-language-features",
    "editor.formatOnSave": true
  },
  "[markdown]": {
    "cSpell.advanced.feature.useReferenceProviderRemove": "/^#+\\s/",
    "cSpell.advanced.feature.useReferenceProviderWithRename": true,
    "cSpell.fixSpellingWithRenameProvider": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.codeActionsOnSave": {
      "source.fixAll": true
    },
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.formatOnSave": true,
    "editor.lineNumbers": "on",
    "editor.unicodeHighlight.ambiguousCharacters": true,
    "editor.unicodeHighlight.invisibleCharacters": true,
    "editor.wordWrap": "on"
  },
  "[typescript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true,
      "source.organizeImports": true
    },
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescriptreact]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": true
    },
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "editor.codeActionsOnSave": {
    "source.fixAll": true
  },
  "editor.formatOnPaste": false, // required
  "editor.formatOnSave": true, // optional
  "editor.formatOnSaveMode": "file", // required to format on save
  "editor.formatOnType": false, // required
  "editor.renderControlCharacters": true,
  "eslint.codeActionsOnSave.mode": "all",
  "eslint.codeActionsOnSave.rules": [
    "!import/no-unresolved"
  ],
  "eslint.enable": true,
  "eslint.format.enable": true,
  "eslint.lintTask.enable": true,
  "eslint.nodePath": ".yarn/sdks",
  "eslint.onIgnoredFiles": "warn",
  "eslint.options": {
    "extensions": [
      ".json",
      ".eslintrc",
      ".prettierrc",
      ".js",
      ".jsx",
      ".ts",
      ".tsx"
    ]
  },
  "eslint.run": "onSave",
  "eslint.useESLintClass": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "files.associations": {
    "*.ejs": "html",
    "*.js": "javascript",
    "*.mdb": "sqlite",
    "*.options": "jsonc",
    "*.spec": "python",
    "*tsconfig.json": "jsonc",
    ".prettierignore": "ignore"
  },
  "files.autoSave": "onFocusChange", // optional but recommended
  "prettier.prettierPath": ".yarn/sdks/prettier/index.js",
  "search.exclude": {
    "**/.pnp.*": true,
    "**/.yarn": true
  },
  "typescript.check.npmIsInstalled": true,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.experimental.aiQuickFix": true,
  "typescript.experimental.tsserver.web.typeAcquisition.enabled": true,
  "typescript.format.enable": false,
  "typescript.implementationsCodeLens.enabled": false,
  "typescript.referencesCodeLens.enabled": false,
  "typescript.tsdk": ".yarn/sdks/typescript/lib",
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "typescript.validate.enable": true,
  "cSpell.words": [
    "btime",
    "cssCache",
    "Debouncer",
    "dragEvent",
    "fileHash",
    "keyMap",
    "keyScope",
    "linktext",
    "localStorage",
    "newleaf",
    "Popout",
    "Prec",
    "prefixer",
    "sideDock",
    "viewState",
    "watchPath"
  ]
}
